{"pageProps":{"postData":{"id":"git代码多端同步","contentHtml":"<ol>\n<li>\n<p><strong>设置Webhook</strong></p>\n<p>登录github导航到待监控的存储库，选中设置里面的webhook，添加新的webhook</p>\n<ul>\n<li>在<strong>payLoad URL</strong>中，填写即将编写的Node.js服务器地址+端</li>\n<li>将内容类型设为 <code>application/json</code></li>\n<li>在Secret中，输入该webhook的密码，之后nodeJS会使用它验证hook</li>\n<li>选中触发事件的类型，通常选择推送事件，</li>\n<li>选择<strong>活动</strong>复选框</li>\n</ul>\n<p><img src=\"http://img.massivejohn.com/webhook.png\" alt=\"\"></p>\n</li>\n<li>\n<p><strong>将存储库克隆到服务器</strong></p>\n</li>\n<li>\n<p><strong>创建Webhook脚本</strong></p>\n<ul>\n<li>\n<p><code>mkdir ~/NodeWebhooks&#x26;&#x26; cd ~/NodeWebhooks &#x26;&#x26; touch webhook.js </code></p>\n</li>\n<li>\n<pre><code><span>const</span> secret = <span>\"your_secret_here\"</span>;\n<span>const</span> repo = <span>\"~/your_repo_path_here/\"</span>;\n<span>const</span> http = <span>require</span>(<span>'http'</span>);\n<span>const</span> crypto = <span>require</span>(<span>'crypto'</span>);\n<span>const</span> exec = <span>require</span>(<span>'child_process'</span>).<span>exec</span>;\nhttp.<span>createServer</span>(<span>function</span> (<span>req, res</span>) {\n    req.<span>on</span>(<span>'data'</span>, <span>function</span>(<span>chunk</span>) {\n        <span>let</span> sig = <span>\"sha1=\"</span> + crypto.<span>createHmac</span>(<span>'sha1'</span>, secret).<span>update</span>(chunk.<span>toString</span>()).<span>digest</span>(<span>'hex'</span>);\n        <span>if</span> (req.<span>headers</span>[<span>'x-hub-signature'</span>] == sig) {\n            <span>exec</span>(<span>'cd '</span> + repo + <span>' &#x26;&#x26; git pull &#x26;&#x26; pm2 restart webhook'</span>);\n        }\n    });\n    res.<span>end</span>();\n}).<span>listen</span>(<span>8002</span>);</code></pre>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>测试Webhook</strong></p>\n<ol>\n<li><code>node webhook.js</code></li>\n<li>返回<a href=\"https://github.com/\">Github.com</a>上,找到菜单中的“ <strong>Webhooks</strong> ”，找到<strong>Recent Exiveries</strong>，点击三个点 单击<code>Redeliver</code>重复测试请求</li>\n</ol>\n</li>\n<li>\n<p><strong>push测试成功</strong></p>\n<p><em>需要等一段时间</em>,使用pm2持续集成</p>\n</li>\n</ol>\n","title":"Node.js和Webhooks同步项目","date":"2020-06-28T22:58:19.000Z","description":"git 多端代码同步","tag":"Git、Node、Webhook"}},"__N_SSG":true}