{"pageProps":{"postData":{"id":"React 状态管理","contentHtml":"<h3 id=\"user-content-概述\"><a href=\"#%E6%A6%82%E8%BF%B0\" aria-hidden=\"true\" tabindex=\"-1\"><span></span></a>概述</h3>\n<p>React 中的状态管理</p>\n<h3 id=\"user-content-props\"><a href=\"#props\" aria-hidden=\"true\" tabindex=\"-1\"><span></span></a>props</h3>\n<p>父子组件之间进行状态管理</p>\n<h3 id=\"user-content-context-with-hooks\"><a href=\"#context-with-hooks\" aria-hidden=\"true\" tabindex=\"-1\"><span></span></a>context with hooks</h3>\n<h3 id=\"user-content-redux\"><a href=\"#redux\" aria-hidden=\"true\" tabindex=\"-1\"><span></span></a>Redux</h3>\n<h4 id=\"user-content-redux中执行异步函数\"><a href=\"#redux%E4%B8%AD%E6%89%A7%E8%A1%8C%E5%BC%82%E6%AD%A5%E5%87%BD%E6%95%B0\" aria-hidden=\"true\" tabindex=\"-1\"><span></span></a>redux中执行异步函数</h4>\n<p>在Web世界中，充斥着异步请求，在了解如何在 redux 中实现异步请求之前，需要先熟悉一下 redux 的中间件 middleware。</p>\n<p>redux 中的 异步请求 是通过中间件 完成的，在 <code>@reduxjs/toolkit</code> 中默认处理异步的中间件是 <a href=\"https://github.com/reduxjs/redux-thunk\">redux-thunk</a> , 并且内置在 <code>configureStore</code> 中可以直接使用，一个<code>thunk</code>函数总是以 (dispatch, getState)作为参数，并在其中 dispatch action。</p>\n<pre><code><span>// 为了和普通的 action 保持一致</span>\n<span>const</span> <span>logAndAdd</span> = amount => {\n  <span>return</span> <span>(<span>dispatch, getState</span>) =></span> {\n    <span>const</span> stateBefore = <span>getState</span>()\n    <span>console</span>.<span>log</span>(<span>`Counter before: <span>${stateBefore.counter}</span>`</span>)\n    <span>setTimeOut</span>(<span>()=></span>{\n    \t<span>dispatch</span>(<span>incrementByAmount</span>(amount))\n    }, <span>1000</span>)\n    <span>const</span> stateAfter = <span>getState</span>()\n    <span>console</span>.<span>log</span>(<span>`Counter after: <span>${stateAfter.counter}</span>`</span>)\n  }\n}\n\nstore.<span>dispatch</span>(<span>logAndAdd</span>(<span>5</span>))</code></pre>\n<p>[未完待续...]</p>\n","title":"React 的状态管理","date":"2021-03-25T15:34:21.000Z","description":"react中的状态管理,从props到context到redux","tag":"react,state"}},"__N_SSG":true}